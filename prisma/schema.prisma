// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

enum ScheduleStatus {
  draft
  scheduled
  posted
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model Session {
  id                String              @id
  shop              String
  state             String
  isOnline          Boolean             @default(false)
  scope             String?
  expires           DateTime?
  accessToken       String
  userId            BigInt?
  postScheduleQueue PostScheduleQueue[]
  settingsId        String?             @unique // Fremdschl√ºssel zu Settings
  settings          Settings?           @relation(fields: [settingsId], references: [id])
}

model PostScheduleQueue {
  productId       BigInt           @id
  dateScheduled   DateTime         @default(now())
  postImgUrl      String           @db.Text
  postDescription String
  shopName        String
  postDetails     Json             @default("{}")
  platform        String           @default("")
  scheduleStatus  ScheduleStatus
  Session         Session?         @relation(fields: [sessionId], references: [id])
  sessionId       String?
  instagramQueue  InstagramQueue[]
}

model InstagramQueue {
  id                         Int                @id
  postImgUrl                 String
  postDescription            String
  PostScheduleQueue          PostScheduleQueue? @relation(fields: [postScheduleQueueProductId], references: [productId])
  postScheduleQueueProductId BigInt?
}

model Settings {
  id                  String              @id
  customPlaceholder   CustomPlaceholder[]
  defaultCaption      DefaultCaption[]
  session             Session?
  facebookAccessToken String?             @db.Text
  facebookPageId      String?             @default("")
}

model CustomPlaceholder {
  customPlaceholderName    String   @default("")
  customPlaceholderContent String
  Settings                 Settings @relation(fields: [settingsId], references: [id])
  settingsId               String

  @@id([customPlaceholderName, settingsId])
}

model DefaultCaption {
  defaultCaptionName    String   @default("")
  defaultCaptionContent String
  Settings              Settings @relation(fields: [settingsId], references: [id])
  settingsId            String

  @@id([defaultCaptionName, settingsId])
}

model MediaQueue {
  productId BigInt @id
  shopId    String
}

model Campaign {
  campaignId   Int    @id @default(autoincrement())
  campaignName String
}
